{"version":3,"file":"index.esm.js","sources":["../index.tsx"],"sourcesContent":["import React, { ReactNode } from 'react'\nimport Head from 'next/head'\n\nconst tinybirdDomain = 'https://api.tinybird.co'\nconst tinybirdTrackerURL = 'https://cdn.tinybird.co/static/js/t.js'\n\nexport default function TinybirdProvider(props: {\n  api?: string\n  dataSource: string\n  token: string\n  trackerURL?: string\n  children: ReactNode | ReactNode[]\n}) {\n  return (\n    <>\n      <Head>\n        <script async data-token={props.token} data-source={props.dataSource} data-api={props.api || tinybirdDomain} src={props.trackerURL || tinybirdTrackerURL}></script>\n      </Head>\n      {props.children}\n    </>\n  )\n}\n\n\ntype Props = Record<string, unknown> | never\ntype EventOptions<P extends Props> = {\n  props: P\n  callback?: VoidFunction\n}\ntype EventOptionsTuple<P extends Props> = P extends never\n  ? [Omit<EventOptions<P>, 'props'>?]\n  : [EventOptions<P>]\ntype Events = { [K: string]: Props }\n\nexport function useTinybird<E extends Events = any>() {\n  return function <N extends keyof E>(\n    eventName: N,\n    ...rest: EventOptionsTuple<E[N]>\n  ) {\n    return (window as any).tinybird?.(eventName, rest[0])\n  }\n}"],"names":[],"mappings":";;;AAGA,IAAM,cAAc,GAAG,yBAAyB,CAAA;AAChD,IAAM,kBAAkB,GAAG,wCAAwC,CAAA;SAE3C,gBAAgB,CAAC,KAMxC;IACC,QACE;QACE,oBAAC,IAAI;YACH,gCAAQ,KAAK,sBAAa,KAAK,CAAC,KAAK,iBAAe,KAAK,CAAC,UAAU,cAAY,KAAK,CAAC,GAAG,IAAI,cAAc,EAAE,GAAG,EAAE,KAAK,CAAC,UAAU,IAAI,kBAAkB,GAAW,CAC9J;QACN,KAAK,CAAC,QAAQ,CACd,EACJ;AACH,CAAC;SAae,WAAW;IACzB,OAAO,UACL,SAAY;;QACZ,cAAgC;aAAhC,UAAgC,EAAhC,qBAAgC,EAAhC,IAAgC;YAAhC,6BAAgC;;QAEhC,OAAO,MAAA,MAAC,MAAc,EAAC,QAAQ,mDAAG,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;KACtD,CAAA;AACH;;;;"}